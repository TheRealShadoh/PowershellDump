<File version="3.1">
  <FileID>89f7d3ae-330e-458c-9f87-7499b7f2e479</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAFyfSURBVHhe7d1ndFtpnh74/rCf/c1n01nvrs96
x54dz/is7Rl73RPsGc9M99jd06E6x6qu0K2urFLOYhDFnHPOOeecc86ZRGRSJKlc9ez7vyQkSsWC
QqGqXoHPT+c5hIB7L3AvCLzPBS+ArxERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERHRs/rtT37687SktOy06ITUtOh4
hmEYhmFexsQmpKXFJ2Wk/dmf/Vna7hj/2b7//R8UdU+YMGa6ieHFqwzDMAzDvKxZuooJ2zZKa9uw
O8x/ttSMvLRJ6xaahhbQwjAMwzDMToYXXyxf5bzG/EsYnl97egGQlwomLDfROrKENkdGl9VPFfnp
iPx/7zQMwzAM46ZpV+Ne08A8GvvnnisyT8fYMpoHX2BeFbleGcT3u/xpeXTbTRiYtj5nAZCBXrWI
tiG1IHUDmgeX1MqojTBkU5dZ0b67cIZhGIZx13SMm1DbPYXi+gGUNw8/V0obB1HeMrLzc/e8st2f
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
78qSA/nkcvk+FnnuktPyPCY/HZEB+eH/1Wm5XJZrfE+M+r/M68pPbXWLAiCRX1TZE5SVYA5GHPf3
fr8PzxKZlwXgq8cCoBcWgM+fncF6J65etivjNgWAYZ43LAB6YAHQCwvAwQkLAHNgwwKgBxYAvRy0
AiADoLwkv3ev/aBE/sQgf6pgAWAOXFgA9MACoJeDVADu3LmDgYEBowToHnmbu/zceyD0540sU74N
UT5siAWAOVBhAdADC4BeDlIB+ESt7H4Dn26Rj3Wfn18wBmrZW3dV5FMHZZnXrl3b93pZABi3DQuA
HlgA9HKQCsDL4t69e8bjYmtry3jecnWefG50hAWAcdvILz4LwFePBUAvLAD6kWMV5D5xNlh/EWEB
YNw2LAB6YAHQCwuAflgAGMbFYQHQAwuAXlgA9MMCwDAujqMA3GMB+EqxAGiGBUA7d16mAjBpuYlp
603MqZkZRtvY1e+p+RrmVzaxsLrFfEWZsVzHjPWGcZ/M2m5g2nJt3+mYLy/yuHA8TmasO/fPftMx
X07m1QBs3CfqOevh89eXkCkZy+3PWACS07LT1u/AmEFaA8NoH/stTKqfk9Yt5ivKlO3Wp++TfaZj
vrzIffDoPtk5vd90zJeU3cfFo/vky8m0yuzaHSys3Xp6AYiKTSy6qgqAtAWGYRiGYV7uyOC/vLb1
9AJARERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERHQgfe1r/z/96q9D6BPYuwAAAABJRU5ErkJggg==</Preview>
  <Form>Pu3M1lqPHkUAACODCAAAAAAABADdnFFv4jgQx99Puu9gRad7ynYTAgTuWiSgXe1qS0EN7T2uTGIg12CjxHTb
+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</Form>
  <Code><![CDATA[
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	$listBox.DisplayMember = $DisplayMember
}


$formVCenterManager_Load={
	#TODO: Initialize Form Controls here
	$buttonASPPowerOff.Enabled = $false
	$buttonASPPowerOn.Enabled = $false
	$nl = [Environment]::newline
	$textbox1.Text = "vCenter Manager v1.3 Select your VMs then select which task to complete."
	# Gather all Non template VMs
	$VMs = Get-VM  | Select-Object Name | Sort-Object
	Update-ListBox $checkedlistbox1 -Items $VMs.name -DisplayMember Name
	# Gather template VMs
	$TemplateVMs = Get-VM | where { $_.name -like "*_TMPL*" } | Select-Object Name | Sort-Object
	Update-ListBox $checkedlistbox2 -Items $TemplateVMs.name -DisplayMember Name
	$CitrixVMs = Get-VM | Select-Object Name | Sort-Object
	Update-ListBox $checkedlistbox3 -Items $CitrixVMs.name -DisplayMember Name
	}

$buttonDisconnect_Click={
	#TODO: Place custom script here
	Disconnect-VIServer -Confirm:$false -Force
}


$buttonASPPowerOff_Click={
	
}

$buttonASPPowerOn_Click={
	
	
}

$buttonUnselectAll_Click={
	#TODO: Place custom script here
	$i = 0
	$count = $checkedlistbox1.Items.Count
	Do { $checkedlistbox1.SetItemChecked($i, $false); $i++ }
	Until ($i -eq ($count))
	
}

$buttonSelectAll_Click={
	#TODO: Place custom script here
	$i = 0
	$count = $checkedlistbox1.Items.Count
	Do { $checkedlistbox1.SetItemChecked($i, $true); $i++ }
	Until ($i -eq ($count))
	
}

$buttonCreateNewSnapshot_Click={
	#TODO: Place custom script here	$Name = Read-Host "Enter snapshot name."
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	$Name = Read-Host "Enter Name for snapshot"
	$Description = Read-Host "Enter detailed description."
	
	IF ($Name.Length -gt 0 -and $Description.Length -gt 0)
	{
		$Jobscript =
		{
			Connect-VIServer -Server $args[1] -User $args[2] -Password $args[3]
			foreach ($obj in $args[0])
			{
				While ((Get-Task -Status Running | Where { $_.name -eq "CreateSnapshot_Task" }).count -gt 5)
				{
					Start-Sleep -Seconds 1
				}
				New-Snapshot -vm $obj -name $args[4] -Description $args[5] -RunAsync -Confirm:$false
			}
			Disconnect-VIServer -Server $args[1] -Force -Confirm:$false
		}
		#Start-Job -Name CreateNewSnapshots -InitializationScript {Add-PSSnapin VMware.VIMAutomation.Core} -ScriptBlock $jobscript -ArgumentList $script:targets,$script:vcIP,$script:user,$script:pass,$Name,$Description
		foreach ($obj in $script:targets)
		{
			While ((Get-Task -Status Running | Where { $_.name -eq "CreateSnapshot_Task" }).count -gt 5)
			{
				Start-Sleep -Seconds 30
			}
			New-Snapshot -vm $obj -name $Name -Description $Description -RunAsync -Confirm:$false
		}
	}
	ELSE
	{
		msg Console "Please enter the required fields"
	}
	
}


$buttonDeleteAllSnapshots_Click= {
	#TODO: Place custom script here
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	$Jobscript =
	{
		Connect-VIServer -Server $args[1] -User $args[2] -Password $args[3]
		
		Foreach ($obj in $args[0])
		{
			while ((Get-task -Status Running | Where { $_.name -eq "RemoveSnapshot_Task" }).count -gt 10)
			{
				Start-Sleep -Seconds 30
			}
			Get-Snapshot -VM $obj | Remove-Snapshot -Confirm:$false -RunAsync | Out-Null
		}
		Disconnect-VIServer -Server $args[1] -Force -Confirm:$false
	}
	#Start-Job -Name DeleteAllSnapshots -InitializationScript { Add-PSSnapin VMware.VIMAutomation.Core } -ScriptBlock $jobscript -ArgumentList $script:targets, $script:vcIP, $script:user, $script:pass
	foreach ($obj in $script:targets)
	{
		while ((Get-task -Status Running | Where { $_.name -eq "RemoveSnapshot_Task" }).count -gt 10)
		{
			Start-Sleep -Seconds 30
		}
		Get-Snapshot -VM $obj | Remove-Snapshot -Confirm:$false -RunAsync | Out-Null
	}
}

$buttonDeleteAllButCurrentS_Click={
	#TODO: Place custom script here
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	$Jobscript =
	{
		Connect-VIServer -Server $args[1] -User $args[2] -Password $args[3]
		
		Foreach ($obj in $args[0])
		{
			while ((Get-task -Status Running | Where { $_.name -eq "RemoveSnapshot_Task" }).count -gt 10)
			{
				Start-Sleep -Seconds 30
			}
			Get-Snapshot -VM $obj | where { $_.isCurrent -eq $false } | Remove-Snapshot -Confirm:$false -RunAsync | Out-Null
		}
		Disconnect-VIServer -Server $args[1] -Force -Confirm:$false
	}
	#Start-Job -Name DeleteAllButCurrent -InitializationScript { Add-PSSnapin VMware.VIMAutomation.Core } -ScriptBlock $jobscript -ArgumentList $script:targets, $script:vcIP, $script:user, $script:pass
	foreach ($obj in $script:targets)
	{
		while ((Get-task -Status Running | Where { $_.name -eq "RemoveSnapshot_Task" }).count -gt 10)
		{
			Start-Sleep -Seconds 30
		}
		Get-Snapshot -VM $obj | where { $_.isCurrent -eq $false } | Remove-Snapshot -Confirm:$false -RunAsync | Out-Null
	}
	
}

$buttonDeleteAllButLast3Sna_Click={
	#TODO: Place custom script here
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	$Jobscript =
	{
		Connect-VIServer -Server $args[1] -User $args[2] -Password $args[3]
		
		Foreach ($obj in $args[0])
		{
			while ((Get-task -Status Running | Where { $_.name -eq "RemoveSnapshot_Task" }).count -gt 10)
			{
				Start-Sleep -Seconds 30
			}
			
		$count = (Get-Snapshot -VM $obj).count
		$i = 0
		if ($count -gt 3)
		{
			Do { (Get-Snapshot -VM $obj)[$i] | Remove-Snapshot -Confirm:$false -RunAsync | Out-Null; $i++ }
			Until ($i -eq ($count - 3))
		}
			
		}
		Disconnect-VIServer -Server $args[1] -Force -Confirm:$false
	}
	#Start-Job -Name DeleteAllBut3 -InitializationScript { Add-PSSnapin VMware.VIMAutomation.Core } -ScriptBlock $jobscript -ArgumentList $script:targets, $script:vcIP, $script:user, $script:pass
	foreach ($obj in $script:targets)
	{
		while ((Get-task -Status Running | Where { $_.name -eq "RemoveSnapshot_Task" }).count -gt 10)
		{
			Start-Sleep -Seconds 30
		}
		$count = (Get-Snapshot -VM $obj).count
		$i = 0
		if ($count -gt 3)
		{
			Do { (Get-Snapshot -VM $obj)[$i] | Remove-Snapshot -Confirm:$false -RunAsync | Out-Null; $i++ }
			Until ($i -eq ($count - 3))
		}
	}
	
}

$button2TemplateSlctAll_Click={
	#TODO: Place custom script here
	$i = 0
	$count = $checkedlistbox2.Items.Count
	Do { $checkedlistbox2.SetItemChecked($i, $true); $i++ }
	Until ($i -eq ($count))
	
}

$button1TemplateUnslctAll_Click={
	#TODO: Place custom script here
	$i = 0
	$count = $checkedlistbox2.Items.Count
	Do { $checkedlistbox2.SetItemChecked($i, $false); $i++ }
	Until ($i -eq ($count))
	
}

$button2CitrixSelect_Click={
	#TODO: Place custom script here
	$i = 0
	$count = $checkedlistbox3.Items.Count
	Do { $checkedlistbox3.SetItemChecked($i, $true); $i++ }
	Until ($i -eq ($count))
	
	
}

$button1CitrixUnSelect_Click={
	#TODO: Place custom script here
	$i = 0
	$count = $checkedlistbox3.Items.Count
	Do { $checkedlistbox3.SetItemChecked($i, $false); $i++ }
	Until ($i -eq ($count))
	
}



$checkboxUnlockAdvancedTools_CheckStateChanged={
	#TODO: Place custom script here
	IF ($buttonASPPowerOff.Enabled -eq $false)
	{
		$buttonASPPowerOff.Enabled = $true
		$buttonASPPowerOn.Enabled = $true
	}
	Else
	{
		$buttonASPPowerOff.Enabled = $false
		$buttonASPPowerOn.Enabled = $false
	}

	
}

$buttonShutdownVM_Click={
	#TODO: Place custom script here
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	Foreach ($VM in $script:targets)
	{
		Shutdown-VMGuest -VM $VM -confirm:$false
	
	}
	# Wait for completion
	Wait-VMOffline $script:targets
}

$buttonPowerOnVM_Click={
	#TODO: Place custom script here
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	Foreach ($Target in $script:targets)
	{
		Start-VMQuestions $Target
	}
	
}

$buttonCreateOVA_Click={
	#TODO: Place custom script here
	$script:targets = @()
	$script:targets += $checkedlistbox2.CheckedItems
	$script:targets += $checkedlistbox1.CheckedItems
	$script:targets += $checkedlistbox3.CheckedItems
	
	IF ($script:targets | where { $_.PowerState -eq "PoweredOn" })
	{
		Write-Warning "WARNING: ALL VMs BEING EXPORTED MUST BE POWERED OFF BEFORE CONTINUING"
		return
		
	}
	
	$folderbrowsermoderndialog1.ShowDialog()
	$Savepath = $folderbrowsermoderndialog1.SelectedPath

	Foreach ($vm in $script:targets)
	{
		Export-vapp -destination $Savepath -VM $vm -Format Ova -Confirm:$false
		
	}
	
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
  </Assemblies>
</File>